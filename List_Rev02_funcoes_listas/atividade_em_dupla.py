# -*- coding: utf-8 -*-
"""Atividade_em_dupla.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sTl1f2rW_3ha-ZVg1h3ttllJ6Lk2jXGp

**LISTA DE EXERCÍCIOS – ATIVIDADE EM DUPLA**
> 
ALUNOS: Michel Arthur Sousa Braga Júnior e Gustavo Paulo dos Santos
> 
Informática - 2° ANO
"""

# Questão 1
#Escreva um programa que leia a quantidade de dias, horas, minutos e segundos do usuário. Calcule o total de segundos.

dias = int(input('|| Dias: '))
horas = int(input('|| Horas: '))
minutos = int(input('|| Minutos: '))
segundos = int(input('|| Segundos: '))

horas += dias*24
minutos += horas*60
segundos += minutos*60

print(f'||A quantidade de segundos é: {segundos}')

#Questão 2
#Faça um programa que leia duas listas e que gere uma terceira com os elementos das duas primeiras.

list1 = []
list2 = []
max = 0
while True:
  list1.append(input('|| Digite os elementos da lista 1: '))
  list2.append(input('|| Digite os elementos da lista 2: '))
  max += 1
  if list1[max-1] == '0' or list2[max-1] == '0':
    list1.remove('0')
    list2.remove('0')
    break

list3 = list1+list2
print(f'|| A soma das lista é: {list3}')

#Questão 3
#Faça um programa que percorra duas listas e que gere uma terceira sem elementos repetidos.

x = []
y = []
max = 0
while True:
  x.append(input('|| Digite os elementos da lista 1: '))
  y.append(input('|| Digite os elementos da lista 2: '))
  max += 1
  if x[max-1] == '0' or y[max-1] == '0':
    break

for tt1 in x:
  for tt2 in y:
    if (tt1==tt2):
        print(list(set(x+y)))

#Questão 4
#A lista de temperaturas de Mons, na Bélgica, foi armazenada na lista
T = [-10, -8, 0, 1, 2, 5, -2, -4]
#Faça um programa que imprima a menor e a maior temperatura, assim como a temperatura média.
media = sum(T)/len(T)
print(f'|| A média de temperatura é: {media} °C')
T.sort()
print(f'|| Mais alta: {T[7]} °C')
print(f'|| Mais baixa: {T[0]} °C')

# Questão 5
# Escreva uma função que receba uma string e uma lista. A função deve comparar a string
# passada com os elementos da lista, também passada como parâmetro. 
# Retorne verdadeiro se a string for encontrada dentro da lista, e falso, caso contráro.
listaTeste = ['Marcelo', 25, 'Café', 'Queijo', 12]
def comparer(string,lista):
    print(f'{string} na lista é:')
    for checksum in lista:
        if string in lista:
            return print('Verdadeiro\n')
        elif string not in lista:
            return print('Falso\n')
comparer('Queijo', listaTeste)
comparer('Café', listaTeste)
comparer('Presunto', listaTeste)
comparer(12, listaTeste)

# Questão 6
# Escreva uma função que receba as dimensões de uma fotografia em centímetros (por exemplo 10 x 15 cm) 
# e a densidade de píxeis da impressora (por exemplo 300 dpi), e retorne a resolução 
# (por exemplo 2.1 mega píxeis) mínima necessária para imprimir aquela foto. A densidade de píxeis 
# da impressora diz quantos píxeis são impressos a cada polegada. Por exemplo: 300 dpi 
# (dots per inch, ou pontos por polegada) significa que em uma polegada em linha reta da imagem há 300 
# píxeis. 

polegada = 2.54 #1 polegada equivale a 2,54 cm

def receber ():
  a = float(input('Digite a largura/altura da fotografia (em cm): '))
  c = float(input('Digite o comprimento da fotografia (em cm): '))
  dpi = float(input('Digite a densidade de píxeis da impressora (por exemplo 300 dpi): '))
  return a, c, dpi

def convertor (a, c, dpi, polegada):
  pixels = dpi/polegada
  a_pixel = a*pixels
  c_pixel = c*pixels
  resolucao_megapixel = (a_pixel*c_pixel)/1000000
  print(f'A resolução da fotografia em megapixeis é igual a {round(resolucao_megapixel, 1)} mega píxeis')

altura, comprimento, densidade = receber()
teste = convertor(altura, comprimento, densidade, polegada)

# Questão 7
# Duas palavras são anagramas se você puder soletrar uma rearranjando as letras da outra.
# Escreva uma função chamada (is_anagram) que tome duas string e retorne ("Sim") se forem
# anagramas ou ("Não") caso contrário.
def is_anagram(palavra1, palavra2):
    palavra1 = ''.join(sorted(palavra1))
    palavra2 = ''.join(sorted(palavra2))
    if palavra1 == palavra2:
        print('Sim')
    else:
        print('Não')
is_anagram('amor','roma')
is_anagram('pedra','adrep')

# Questão 8
# Tanto cadeias DNA quanto RNA são sequências de nucleotídeos. O DNA é formado por:
# adenina (A), citosina (C), guanina (G) e timina (T). E o RNA é formado por: 
# adenina (A), citosina (C), guanina (G) e uracila (U). Dada uma cadeia de DNA,
# o RNA transcrito é formado substituindo um nucleotídeo pelo seu complemento:
# G > C
# C > G
# T > A
# A > U    
# Implemente uma função que receba uma cadeia de DNA como string e retorno a o RNA complementar.
def transfusor(DNA):
    datapack = DNA
    DNA = DNA.upper()
    DNA = DNA.replace('A', 'u')
    DNA = DNA.replace('T', 'a')
    DNA = DNA.replace('G', 'c')
    DNA = DNA.replace('C', 'g')
    DNA = DNA.upper()
    return print(f'RNA complementar do DNA {datapack} é: {DNA}')
transfusor('ATGC')
transfusor('GTCA')
transfusor('GTAC')